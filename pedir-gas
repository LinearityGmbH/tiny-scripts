#!/usr/bin/env ruby
# frozen_string_literal: true

require 'cgi'
require 'date'
require 'open3'
require 'optparse'
require 'pathname'
require 'yaml'

Defaults = {
  quantity: 1,
  in_days: 0, # Today
  time: '18:00'
}.freeze

# Options
ARGV.push('--help') if ARGV.empty?

OptionParser.new do |parser|
  parser.banner = <<~BANNER
    Pedir garrafas de gás à Drogaria Ponto Azul

    Usage:
      #{File.basename($PROGRAM_NAME)} <quantidade> <em quantos dias> <hora>
      #{File.basename($PROGRAM_NAME)} default

    Valores pré-definidos (quando "default"):
      Quantidade: #{Defaults[:quantity]}
      Em quantos dias: #{Defaults[:in_days]}
      Hora: #{Defaults[:time]}
  BANNER
end.parse!

# Arguments
if ARGV[0] == 'default'
  Bottle_quantity = CGI.escape(Defaults[:quantity].to_s)
  Delivery_date = CGI.escape((Date.today + Defaults[:in_days]).strftime('%m/%d/%Y'))
  Delivery_time = CGI.escape(Defaults[:time])
else
  Bottle_quantity = CGI.escape(ARGV[0])
  Delivery_date = CGI.escape((Date.today + ARGV[1].to_i).strftime('%m/%d/%Y'))
  Delivery_time = CGI.escape(ARGV[2])
end

# Constants
Default_cmd = [
  'curl', 'https://pontoazul.com.pt/send.php',
  '--header', 'Connection: keep-alive',
  '--header', 'Cache-Control: max-age=0',
  '--header', 'Upgrade-Insecure-Requests: 1',
  '--header', 'Origin: https://pontoazul.com.pt',
  '--header', 'Content-Type: application/x-www-form-urlencoded',
  '--header', 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36',
  '--header', 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
  '--header', 'Sec-Fetch-Site: same-origin',
  '--header', 'Sec-Fetch-Mode: navigate',
  '--header', 'Sec-Fetch-User: ?1',
  '--header', 'Sec-Fetch-Dest: document',
  '--header', 'Referer: https://pontoazul.com.pt/encomendas.php',
  '--header', 'Accept-Language: en-GB,en-US;q=0.9,en;q=0.8',
  '--compressed', '--silent'
]

# Delivery details
Details_file = Pathname.new(ENV['HOME']).join('.config/pontoazul/info')

# Bottles info
Bottles_array = %w[pluma12k butano13k propano11k propano45k]
Bottles_string = Bottles_array.join(', ')

# Abort if file with info is missing
unless Details_file.exist?
  # Create new file template
  Empty_config = <<~CONFIG
    ---
    Primeiro nome:
    Apelido:
    Morada:
    Codigo postal:
    Localidade:
    NIF:
    Email:
    Telefone:
    Garrafas: # Deixar um de: #{Bottles_string}
    Mensagem: # Opcional
    ...
  CONFIG

  Details_file.dirname.mkpath
  Details_file.write(Empty_config)

  abort "Foi criado um ficheiro em '#{Details_file}'. Preenche-o com os dados necessários."
end

# Load info
Request_data = YAML.load_file(Details_file).transform_values { |v| CGI.escape(v) }

# Check if 'Garrafas' has a valid value
unless Bottles_array.include? Request_data['Garrafas']
  abort "'Garrafas' is wrong. Its value needs to be one of: #{Bottles_string}."
end

# Make the request
form_details = [
  "Nome=#{Request_data['Primeiro nome']}",
  "Apelido=#{Request_data['Apelido']}",
  "Morada=#{Request_data['Morada']}",
  "Codigo_Postal_1=#{Request_data['Codigo postal'].split('-')[0]}",
  "Codigo_Postal=#{Request_data['Codigo postal'].split('-')[1]}",
  "Localidade=#{Request_data['Localidade']}",
  "NIF=#{Request_data['NIF']}",
  "email=#{Request_data['Email']}",
  "Telf=#{Request_data['Telefone']}",
  "Mensagem_Encomenda=#{Request_data['Mensagem']}",
  "datepicker=#{Delivery_date}",
  "horario=#{Delivery_time}",
  'enviar=Enviar'
]

Bottles_array.each do |bottle|
  if Request_data['Garrafas'] == bottle
    form_details.push("#{bottle}=#{Bottle_quantity}")
  else
    form_details.push("#{bottle}=")
  end
end

puts 'Pedido enviado' if Open3.capture2(*Default_cmd, '--data-raw', form_details.join('&')).first.match?('sucesso')
